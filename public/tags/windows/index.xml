<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on Greyhat.dk</title>
    <link>https://www.greyhat.dk/tags/windows/</link>
    <description>Recent content in Windows on Greyhat.dk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Oct 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.greyhat.dk/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Creating facters on Windows</title>
      <link>https://www.greyhat.dk/creating-facters-windows/</link>
      <pubDate>Sat, 25 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.greyhat.dk/creating-facters-windows/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve done automation with puppet for nearly 3 years on Linux but
recently I have been tasked (work) with some automation on Windows. To
tell you the truth I&amp;rsquo;m not exactly a fan of windows and never will be
but I like a challenge.&lt;/p&gt;

&lt;p&gt;But for this particular tasks I needed a list of logical drives and a
list of network adaptors and I couldn&amp;rsquo;t find anyone who had already
created these facters.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://puppetlabs.com/&#34; title=&#34;Puppetlabs&#34;&gt;Puppetlabs&lt;/a&gt; contains a lot of resources when
it comes to Linux but almost none for Windows. It took me a while before
I finally found something I could use so I&amp;rsquo;d like to share what I found.&lt;/p&gt;

&lt;p&gt;WMI (Windows Management Instrumentation) provides a interface to a lot
of resources on a host. Microsoft made their WMI classes public
available at their
site &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/aa389273(v=vs.85).aspx&#34; title=&#34;MSDN&#34;&gt;Microsoft&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After finding the right WMI class a simple powershell script can test
the query before we put it in a facter.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;    PS C:\Users\Administrator&amp;gt; $q = &#39;Win32_NetworkAdapter where AdapterType=&amp;quot;Ethernet 802.3&amp;quot; and Speed &amp;gt; 100&#39;
    PS C:\Users\Administrator&amp;gt; Get-WmiObject $q


    ServiceName      : vmxnet3ndis6
    MACAddress       : 00:50:xx:xx:xx:xx
    AdapterType      : Ethernet 802.3
    DeviceID         : 10
    Name             : vmxnet3 Ethernet Adapter
    NetworkAddresses :
    Speed            : 10000000000

    ServiceName      : vmxnet3ndis6
    MACAddress       : 00:50:xx:xx:xx:xx
    AdapterType      : Ethernet 802.3
    DeviceID         : 14
    Name             : vmxnet3 Ethernet Adapter #2
    NetworkAddresses :
    Speed            : 10000000000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above gives a list of all ethernet adapters using
&lt;a href=&#34;http://en.wikipedia.org/wiki/IEEE_802.3&#34; title=&#34;IEEE 802.3 on wikipedia&#34;&gt;802.3&lt;/a&gt;. So next we can
transfer this to facters.&lt;/p&gt;

&lt;p&gt;Get all 802.3 network adapters:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;    require &#39;facter/util/wmi&#39;

    Facter.add(:networkadapters) do
         confine :kernel =&amp;gt; %{windows}
         setcode do
            require &#39;facter/util/wmi&#39;
            adapters = []

         Facter::Util::WMI.execquery(&amp;quot;select * from Win32_NetworkAdapter where AdapterType=&#39;Ethernet 802.3&#39; and Speed &amp;gt; 100&amp;quot;).each do |ole|
                adapters.push(&amp;quot;#{ole.Name}&amp;quot;)
             end
            adapters.sort.join(&#39;,&#39;)
         end
    end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get all logical (local) drives:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;    require &#39;facter/util/wmi&#39;

    Facter.add(:logical_drives) do
         confine :kernel =&amp;gt; %{windows}
         setcode do
            require &#39;facter/util/wmi&#39;
            drives = []

         Facter::Util::WMI.execquery(&amp;quot;select * from Win32_LogicalDisk where DriveType=3&amp;quot;).each do |ole|
                drives.push(&amp;quot;#{ole.DeviceID}&amp;quot;)
             end
            drives.sort.join(&#39;,&#39;)
         end
    end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How and where facters are put on the Puppet Enterprise installation is
beyond the scope of this post and can easily be found at
&lt;a href=&#34;http://puppetlabs.com/&#34; title=&#34;Puppetlabs&#34;&gt;Puppetlabs&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;The above was tested on a Windows 2012 (64bit) using PE 3.3.x&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>